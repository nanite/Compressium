buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply from: "https://raw.githubusercontent.com/mezz/JustEnoughItems/1.18/Forge/buildtools/AppleSiliconSupport.gradle"

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def ENV = System.getenv()

version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}+mc${minecraft_version}"
group = "${group_id}"
archivesBaseName = "Compressium"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

processResources.duplicatesStrategy = DuplicatesStrategy.EXCLUDE

sourceSets {
    main {
        resources {
            srcDirs "src/generated/resources"
            //But exclude the cache of the generated data from what gets built
            exclude '.cache'
        }
    }
}

task copyConfig(type: Copy) {
    from 'src/main/config'
    into 'run/config'
}

sourceSets {
    main {
        resources {
            srcDirs "src/generated/resources"
            //But exclude the cache of the generated data from what gets built
            exclude '.cache'
        }
    }
}

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
        data {

            workingDirectory project.file('run')

            copy {
                from 'src/main/config'
                into 'run/config'
            }

            args '--mod', 'compressium', '--all', '--output', file('src/generated/resources/'),"--existing","\"" + sourceSets.main.resources.srcDirs[0] + "\""

            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "compressium",
                "Specification-Vendor"    : "",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(jar) {
                classifier null
            }
        }
    }

    repositories {
        if (ENV.NANITE_DEPLOY) {
            maven {
                url "https://maven.nanite.dev/"
                credentials {
                    username = "nanite"
                    password = "${ENV.NANITE_DEPLOY}"
                }
            }
        }
    }
}

if (ENV.CURSE_DEPLOY) {
    curseforge {
        apiKey = ENV.CURSE_DEPLOY
        project {
            id = project.curseforge_id
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion "${minecraft_version}"
            mainArtifact(jar)
            changelog = file("./CHANGELOG.md")
            changelogType = 'markdown'
        }
    }
}
